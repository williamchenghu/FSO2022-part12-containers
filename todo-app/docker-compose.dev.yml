services:
  # Frontend
  app:
    image: todo-frontend:1.0.0-dev
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend/:/usr/src/app
    ports:
      - 3000:3000
    container_name: todo-frontend-dev

  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: the_username
      MONGO_INITDB_ROOT_PASSWORD: the_password
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
    container_name: mongo-db

  redis:
    image: redis
    ports:
      - 6378:6379
    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
    volumes:
      - ./todo-backend/redis_data:/data
    container_name: redis-db

  server:
    image: todo-backend:1.0.0-dev
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-backend:/usr/src/app
    ports:
      - 3003:3003
    container_name: todo-backend-dev
    depends_on:
      - mongo
      - redis
    environment:
      PORT: 3003
      REDIS_URL: redis://redis:6379
      MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started
      - server # wait for the backend container to be started
